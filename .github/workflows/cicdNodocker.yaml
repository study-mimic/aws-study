# 프로젝트의 CI/CD를 위한 설정 파일

# 이름을 지정 (원하는 이름으로 지정해도 무관합니다.)
name: aws-study-project

# 어떤 조건에서 발동하는지 설정
# 여기서는 테스트용이기에 메인브런치에 넣기만하면 발동 되도록 했음
on:
  push:
    branches: [ "main" ]
#------------------------------------------------
#  PROJECT_NAME: 프로젝트 이름 설정. S3경로 설정에 사용.
#  BUCKET_NAME: 앞에서 생성한 S3 버킷이름
#  CODE_DEPLOY_APP_NAME: CodeDeploy 애플리케이션 이름
#  DEPLOYMENT_GROUP_NAME: CodeDeploy 배포그룹이름
env:
  PROJECT_NAME: aws-study-cicd
  BUCKET_NAME: aws-study-bucket-hako
  CODE_DEPLOY_APP_NAME: aws-study-code-deploy
  DEPLOYMENT_GROUP_NAME: aws-study-code-deploy-group
#------------------------------------------------


# 권한 설정으로, 내용물을 읽을 수 있는 권한을 부여합니다.
permissions:
  contents: read

# 수행할 작업들을 선언합니다.
jobs:
  build:

    # 우분투 최신버전에서 작업을 실행
    runs-on: ubuntu-latest

    # steps 하위로 선언한 순서대로 작업을 수행합니다.
    steps:

      # 코드 체크아웃은 저장소에서 소스코드를 가져와서 현재 작업 디렉토리에 복사하는 작업입니다.
      # 최신 소스 코드를 가져와서 빌드, 테스트, 배포 등의 작업을 진행할 수 있습니다.
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      # 작업한 스프링 프로젝트의 자바 버전을 설정합니다.
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 스크립트 실행 전 실행 권한을 부여합니다.
      - name: gradlew 권한 부여, 빌드
        run:  |
          chmod +x ./gradlew
          ./gradlew bootJar

      #------------------------------------------------

      # S3 버킷으로 옮길 zip 파일을 생성합니다.
      - name: ZIP 파일 생성
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # AWS 계정의 서비스 접근 권한을 획득합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 생성된 zip 파일을 S3에 업로드 합니다.
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # CodeDeploy에 배포요청을 진행합니다.
      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
